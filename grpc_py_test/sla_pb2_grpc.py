# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import sla_pb2 as sla__pb2


class sla_ctrlStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self._setup = channel.unary_unary(
        '/sla.sla_ctrl/_setup',
        request_serializer=sla__pb2.conf_req.SerializeToString,
        response_deserializer=sla__pb2.status_res.FromString,
        )
    self._setup_get = channel.unary_unary(
        '/sla.sla_ctrl/_setup_get',
        request_serializer=sla__pb2.conf_req.SerializeToString,
        response_deserializer=sla__pb2.conf_req.FromString,
        )
    self._ref_phase_compute = channel.unary_unary(
        '/sla.sla_ctrl/_ref_phase_compute',
        request_serializer=sla__pb2.compute_req.SerializeToString,
        response_deserializer=sla__pb2.compute_res.FromString,
        )
    self._depth_compute = channel.unary_unary(
        '/sla.sla_ctrl/_depth_compute',
        request_serializer=sla__pb2.compute_req.SerializeToString,
        response_deserializer=sla__pb2.compute_res.FromString,
        )
    self._ref_phase_capture_and_compute = channel.unary_unary(
        '/sla.sla_ctrl/_ref_phase_capture_and_compute',
        request_serializer=sla__pb2.compute_req.SerializeToString,
        response_deserializer=sla__pb2.compute_res.FromString,
        )
    self._depth_capture_and_compute = channel.unary_unary(
        '/sla.sla_ctrl/_depth_capture_and_compute',
        request_serializer=sla__pb2.compute_req.SerializeToString,
        response_deserializer=sla__pb2.compute_res.FromString,
        )
    self._scan_start = channel.unary_unary(
        '/sla.sla_ctrl/_scan_start',
        request_serializer=sla__pb2.scan_req.SerializeToString,
        response_deserializer=sla__pb2.status_res.FromString,
        )
    self._scan_pause = channel.unary_unary(
        '/sla.sla_ctrl/_scan_pause',
        request_serializer=sla__pb2.scan_req.SerializeToString,
        response_deserializer=sla__pb2.status_res.FromString,
        )
    self._scan_stop = channel.unary_unary(
        '/sla.sla_ctrl/_scan_stop',
        request_serializer=sla__pb2.scan_req.SerializeToString,
        response_deserializer=sla__pb2.status_res.FromString,
        )


class sla_ctrlServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def _setup(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def _setup_get(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def _ref_phase_compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def _depth_compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def _ref_phase_capture_and_compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def _depth_capture_and_compute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def _scan_start(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def _scan_pause(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def _scan_stop(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_sla_ctrlServicer_to_server(servicer, server):
  rpc_method_handlers = {
      '_setup': grpc.unary_unary_rpc_method_handler(
          servicer._setup,
          request_deserializer=sla__pb2.conf_req.FromString,
          response_serializer=sla__pb2.status_res.SerializeToString,
      ),
      '_setup_get': grpc.unary_unary_rpc_method_handler(
          servicer._setup_get,
          request_deserializer=sla__pb2.conf_req.FromString,
          response_serializer=sla__pb2.conf_req.SerializeToString,
      ),
      '_ref_phase_compute': grpc.unary_unary_rpc_method_handler(
          servicer._ref_phase_compute,
          request_deserializer=sla__pb2.compute_req.FromString,
          response_serializer=sla__pb2.compute_res.SerializeToString,
      ),
      '_depth_compute': grpc.unary_unary_rpc_method_handler(
          servicer._depth_compute,
          request_deserializer=sla__pb2.compute_req.FromString,
          response_serializer=sla__pb2.compute_res.SerializeToString,
      ),
      '_ref_phase_capture_and_compute': grpc.unary_unary_rpc_method_handler(
          servicer._ref_phase_capture_and_compute,
          request_deserializer=sla__pb2.compute_req.FromString,
          response_serializer=sla__pb2.compute_res.SerializeToString,
      ),
      '_depth_capture_and_compute': grpc.unary_unary_rpc_method_handler(
          servicer._depth_capture_and_compute,
          request_deserializer=sla__pb2.compute_req.FromString,
          response_serializer=sla__pb2.compute_res.SerializeToString,
      ),
      '_scan_start': grpc.unary_unary_rpc_method_handler(
          servicer._scan_start,
          request_deserializer=sla__pb2.scan_req.FromString,
          response_serializer=sla__pb2.status_res.SerializeToString,
      ),
      '_scan_pause': grpc.unary_unary_rpc_method_handler(
          servicer._scan_pause,
          request_deserializer=sla__pb2.scan_req.FromString,
          response_serializer=sla__pb2.status_res.SerializeToString,
      ),
      '_scan_stop': grpc.unary_unary_rpc_method_handler(
          servicer._scan_stop,
          request_deserializer=sla__pb2.scan_req.FromString,
          response_serializer=sla__pb2.status_res.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sla.sla_ctrl', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
