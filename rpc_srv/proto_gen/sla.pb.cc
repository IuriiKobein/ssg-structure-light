// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sla.proto

#include "sla.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace sla {
class tpu_conf_reqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<tpu_conf_req> _instance;
} _tpu_conf_req_default_instance_;
class tpu_conf_resDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<tpu_conf_res> _instance;
} _tpu_conf_res_default_instance_;
class tpu_calc_reqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<tpu_calc_req> _instance;
} _tpu_calc_req_default_instance_;
class tpu_calc_resDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<tpu_calc_res> _instance;
} _tpu_calc_res_default_instance_;
}  // namespace sla
static void InitDefaultsscc_info_tpu_calc_req_sla_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sla::_tpu_calc_req_default_instance_;
    new (ptr) ::sla::tpu_calc_req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sla::tpu_calc_req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_tpu_calc_req_sla_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_tpu_calc_req_sla_2eproto}, {}};

static void InitDefaultsscc_info_tpu_calc_res_sla_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sla::_tpu_calc_res_default_instance_;
    new (ptr) ::sla::tpu_calc_res();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sla::tpu_calc_res::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_tpu_calc_res_sla_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_tpu_calc_res_sla_2eproto}, {}};

static void InitDefaultsscc_info_tpu_conf_req_sla_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sla::_tpu_conf_req_default_instance_;
    new (ptr) ::sla::tpu_conf_req();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sla::tpu_conf_req::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_tpu_conf_req_sla_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_tpu_conf_req_sla_2eproto}, {}};

static void InitDefaultsscc_info_tpu_conf_res_sla_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sla::_tpu_conf_res_default_instance_;
    new (ptr) ::sla::tpu_conf_res();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sla::tpu_conf_res::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_tpu_conf_res_sla_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_tpu_conf_res_sla_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_sla_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_sla_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sla_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_sla_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sla::tpu_conf_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sla::tpu_conf_req, width_),
  PROTOBUF_FIELD_OFFSET(::sla::tpu_conf_req, height_),
  PROTOBUF_FIELD_OFFSET(::sla::tpu_conf_req, scale1_),
  PROTOBUF_FIELD_OFFSET(::sla::tpu_conf_req, scale2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sla::tpu_conf_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sla::tpu_conf_res, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sla::tpu_calc_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sla::tpu_calc_req, ref_lf_),
  PROTOBUF_FIELD_OFFSET(::sla::tpu_calc_req, ref_hf_),
  PROTOBUF_FIELD_OFFSET(::sla::tpu_calc_req, obj_lf_),
  PROTOBUF_FIELD_OFFSET(::sla::tpu_calc_req, obj_hf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sla::tpu_calc_res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::sla::tpu_calc_res, url_unwrap_phase_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sla::tpu_conf_req)},
  { 9, -1, sizeof(::sla::tpu_conf_res)},
  { 15, -1, sizeof(::sla::tpu_calc_req)},
  { 24, -1, sizeof(::sla::tpu_calc_res)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sla::_tpu_conf_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sla::_tpu_conf_res_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sla::_tpu_calc_req_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::sla::_tpu_calc_res_default_instance_),
};

const char descriptor_table_protodef_sla_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\tsla.proto\022\003sla\"M\n\014tpu_conf_req\022\r\n\005widt"
  "h\030\001 \001(\005\022\016\n\006height\030\002 \001(\005\022\016\n\006scale1\030\003 \001(\005\022"
  "\016\n\006scale2\030\004 \001(\005\"\036\n\014tpu_conf_res\022\016\n\006statu"
  "s\030\001 \001(\005\"N\n\014tpu_calc_req\022\016\n\006ref_lf\030\001 \001(\t\022"
  "\016\n\006ref_hf\030\002 \001(\t\022\016\n\006obj_lf\030\003 \001(\t\022\016\n\006obj_h"
  "f\030\004 \001(\t\"(\n\014tpu_calc_res\022\030\n\020url_unwrap_ph"
  "ase\030\001 \001(\t2i\n\003tpu\022/\n\005_init\022\021.sla.tpu_conf"
  "_req\032\021.sla.tpu_conf_res\"\000\0221\n\007_invoke\022\021.s"
  "la.tpu_calc_req\032\021.sla.tpu_calc_res\"\000b\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sla_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_sla_2eproto_sccs[4] = {
  &scc_info_tpu_calc_req_sla_2eproto.base,
  &scc_info_tpu_calc_res_sla_2eproto.base,
  &scc_info_tpu_conf_req_sla_2eproto.base,
  &scc_info_tpu_conf_res_sla_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sla_2eproto_once;
static bool descriptor_table_sla_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sla_2eproto = {
  &descriptor_table_sla_2eproto_initialized, descriptor_table_protodef_sla_2eproto, "sla.proto", 364,
  &descriptor_table_sla_2eproto_once, descriptor_table_sla_2eproto_sccs, descriptor_table_sla_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_sla_2eproto::offsets,
  file_level_metadata_sla_2eproto, 4, file_level_enum_descriptors_sla_2eproto, file_level_service_descriptors_sla_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_sla_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_sla_2eproto), true);
namespace sla {

// ===================================================================

void tpu_conf_req::InitAsDefaultInstance() {
}
class tpu_conf_req::_Internal {
 public:
};

tpu_conf_req::tpu_conf_req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sla.tpu_conf_req)
}
tpu_conf_req::tpu_conf_req(const tpu_conf_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&scale2_) -
    reinterpret_cast<char*>(&width_)) + sizeof(scale2_));
  // @@protoc_insertion_point(copy_constructor:sla.tpu_conf_req)
}

void tpu_conf_req::SharedCtor() {
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale2_) -
      reinterpret_cast<char*>(&width_)) + sizeof(scale2_));
}

tpu_conf_req::~tpu_conf_req() {
  // @@protoc_insertion_point(destructor:sla.tpu_conf_req)
  SharedDtor();
}

void tpu_conf_req::SharedDtor() {
}

void tpu_conf_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const tpu_conf_req& tpu_conf_req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_tpu_conf_req_sla_2eproto.base);
  return *internal_default_instance();
}


void tpu_conf_req::Clear() {
// @@protoc_insertion_point(message_clear_start:sla.tpu_conf_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale2_) -
      reinterpret_cast<char*>(&width_)) + sizeof(scale2_));
  _internal_metadata_.Clear();
}

const char* tpu_conf_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 width = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 scale1 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          scale1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 scale2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          scale2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* tpu_conf_req::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sla.tpu_conf_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_width(), target);
  }

  // int32 height = 2;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_height(), target);
  }

  // int32 scale1 = 3;
  if (this->scale1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_scale1(), target);
  }

  // int32 scale2 = 4;
  if (this->scale2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_scale2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sla.tpu_conf_req)
  return target;
}

size_t tpu_conf_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sla.tpu_conf_req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_width());
  }

  // int32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_height());
  }

  // int32 scale1 = 3;
  if (this->scale1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_scale1());
  }

  // int32 scale2 = 4;
  if (this->scale2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_scale2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tpu_conf_req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sla.tpu_conf_req)
  GOOGLE_DCHECK_NE(&from, this);
  const tpu_conf_req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<tpu_conf_req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sla.tpu_conf_req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sla.tpu_conf_req)
    MergeFrom(*source);
  }
}

void tpu_conf_req::MergeFrom(const tpu_conf_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sla.tpu_conf_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
  if (from.scale1() != 0) {
    _internal_set_scale1(from._internal_scale1());
  }
  if (from.scale2() != 0) {
    _internal_set_scale2(from._internal_scale2());
  }
}

void tpu_conf_req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sla.tpu_conf_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tpu_conf_req::CopyFrom(const tpu_conf_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sla.tpu_conf_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tpu_conf_req::IsInitialized() const {
  return true;
}

void tpu_conf_req::InternalSwap(tpu_conf_req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(scale1_, other->scale1_);
  swap(scale2_, other->scale2_);
}

::PROTOBUF_NAMESPACE_ID::Metadata tpu_conf_req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void tpu_conf_res::InitAsDefaultInstance() {
}
class tpu_conf_res::_Internal {
 public:
};

tpu_conf_res::tpu_conf_res()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sla.tpu_conf_res)
}
tpu_conf_res::tpu_conf_res(const tpu_conf_res& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:sla.tpu_conf_res)
}

void tpu_conf_res::SharedCtor() {
  status_ = 0;
}

tpu_conf_res::~tpu_conf_res() {
  // @@protoc_insertion_point(destructor:sla.tpu_conf_res)
  SharedDtor();
}

void tpu_conf_res::SharedDtor() {
}

void tpu_conf_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const tpu_conf_res& tpu_conf_res::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_tpu_conf_res_sla_2eproto.base);
  return *internal_default_instance();
}


void tpu_conf_res::Clear() {
// @@protoc_insertion_point(message_clear_start:sla.tpu_conf_res)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

const char* tpu_conf_res::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* tpu_conf_res::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sla.tpu_conf_res)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sla.tpu_conf_res)
  return target;
}

size_t tpu_conf_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sla.tpu_conf_res)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tpu_conf_res::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sla.tpu_conf_res)
  GOOGLE_DCHECK_NE(&from, this);
  const tpu_conf_res* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<tpu_conf_res>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sla.tpu_conf_res)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sla.tpu_conf_res)
    MergeFrom(*source);
  }
}

void tpu_conf_res::MergeFrom(const tpu_conf_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sla.tpu_conf_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void tpu_conf_res::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sla.tpu_conf_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tpu_conf_res::CopyFrom(const tpu_conf_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sla.tpu_conf_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tpu_conf_res::IsInitialized() const {
  return true;
}

void tpu_conf_res::InternalSwap(tpu_conf_res* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata tpu_conf_res::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void tpu_calc_req::InitAsDefaultInstance() {
}
class tpu_calc_req::_Internal {
 public:
};

tpu_calc_req::tpu_calc_req()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sla.tpu_calc_req)
}
tpu_calc_req::tpu_calc_req(const tpu_calc_req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ref_lf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ref_lf().empty()) {
    ref_lf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ref_lf_);
  }
  ref_hf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ref_hf().empty()) {
    ref_hf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ref_hf_);
  }
  obj_lf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj_lf().empty()) {
    obj_lf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.obj_lf_);
  }
  obj_hf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_obj_hf().empty()) {
    obj_hf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.obj_hf_);
  }
  // @@protoc_insertion_point(copy_constructor:sla.tpu_calc_req)
}

void tpu_calc_req::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_tpu_calc_req_sla_2eproto.base);
  ref_lf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ref_hf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_lf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_hf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

tpu_calc_req::~tpu_calc_req() {
  // @@protoc_insertion_point(destructor:sla.tpu_calc_req)
  SharedDtor();
}

void tpu_calc_req::SharedDtor() {
  ref_lf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ref_hf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_lf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_hf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void tpu_calc_req::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const tpu_calc_req& tpu_calc_req::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_tpu_calc_req_sla_2eproto.base);
  return *internal_default_instance();
}


void tpu_calc_req::Clear() {
// @@protoc_insertion_point(message_clear_start:sla.tpu_calc_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ref_lf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ref_hf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_lf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_hf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* tpu_calc_req::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ref_lf = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ref_lf();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sla.tpu_calc_req.ref_lf"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ref_hf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_ref_hf();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sla.tpu_calc_req.ref_hf"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string obj_lf = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_obj_lf();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sla.tpu_calc_req.obj_lf"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string obj_hf = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_obj_hf();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sla.tpu_calc_req.obj_hf"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* tpu_calc_req::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sla.tpu_calc_req)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ref_lf = 1;
  if (this->ref_lf().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ref_lf().data(), static_cast<int>(this->_internal_ref_lf().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sla.tpu_calc_req.ref_lf");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ref_lf(), target);
  }

  // string ref_hf = 2;
  if (this->ref_hf().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ref_hf().data(), static_cast<int>(this->_internal_ref_hf().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sla.tpu_calc_req.ref_hf");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_ref_hf(), target);
  }

  // string obj_lf = 3;
  if (this->obj_lf().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_obj_lf().data(), static_cast<int>(this->_internal_obj_lf().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sla.tpu_calc_req.obj_lf");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_obj_lf(), target);
  }

  // string obj_hf = 4;
  if (this->obj_hf().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_obj_hf().data(), static_cast<int>(this->_internal_obj_hf().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sla.tpu_calc_req.obj_hf");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_obj_hf(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sla.tpu_calc_req)
  return target;
}

size_t tpu_calc_req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sla.tpu_calc_req)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ref_lf = 1;
  if (this->ref_lf().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ref_lf());
  }

  // string ref_hf = 2;
  if (this->ref_hf().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ref_hf());
  }

  // string obj_lf = 3;
  if (this->obj_lf().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_obj_lf());
  }

  // string obj_hf = 4;
  if (this->obj_hf().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_obj_hf());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tpu_calc_req::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sla.tpu_calc_req)
  GOOGLE_DCHECK_NE(&from, this);
  const tpu_calc_req* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<tpu_calc_req>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sla.tpu_calc_req)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sla.tpu_calc_req)
    MergeFrom(*source);
  }
}

void tpu_calc_req::MergeFrom(const tpu_calc_req& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sla.tpu_calc_req)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ref_lf().size() > 0) {

    ref_lf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ref_lf_);
  }
  if (from.ref_hf().size() > 0) {

    ref_hf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ref_hf_);
  }
  if (from.obj_lf().size() > 0) {

    obj_lf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.obj_lf_);
  }
  if (from.obj_hf().size() > 0) {

    obj_hf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.obj_hf_);
  }
}

void tpu_calc_req::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sla.tpu_calc_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tpu_calc_req::CopyFrom(const tpu_calc_req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sla.tpu_calc_req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tpu_calc_req::IsInitialized() const {
  return true;
}

void tpu_calc_req::InternalSwap(tpu_calc_req* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ref_lf_.Swap(&other->ref_lf_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ref_hf_.Swap(&other->ref_hf_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  obj_lf_.Swap(&other->obj_lf_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  obj_hf_.Swap(&other->obj_hf_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata tpu_calc_req::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void tpu_calc_res::InitAsDefaultInstance() {
}
class tpu_calc_res::_Internal {
 public:
};

tpu_calc_res::tpu_calc_res()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sla.tpu_calc_res)
}
tpu_calc_res::tpu_calc_res(const tpu_calc_res& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_unwrap_phase_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url_unwrap_phase().empty()) {
    url_unwrap_phase_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.url_unwrap_phase_);
  }
  // @@protoc_insertion_point(copy_constructor:sla.tpu_calc_res)
}

void tpu_calc_res::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_tpu_calc_res_sla_2eproto.base);
  url_unwrap_phase_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

tpu_calc_res::~tpu_calc_res() {
  // @@protoc_insertion_point(destructor:sla.tpu_calc_res)
  SharedDtor();
}

void tpu_calc_res::SharedDtor() {
  url_unwrap_phase_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void tpu_calc_res::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const tpu_calc_res& tpu_calc_res::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_tpu_calc_res_sla_2eproto.base);
  return *internal_default_instance();
}


void tpu_calc_res::Clear() {
// @@protoc_insertion_point(message_clear_start:sla.tpu_calc_res)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_unwrap_phase_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* tpu_calc_res::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url_unwrap_phase = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url_unwrap_phase();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "sla.tpu_calc_res.url_unwrap_phase"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* tpu_calc_res::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sla.tpu_calc_res)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url_unwrap_phase = 1;
  if (this->url_unwrap_phase().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url_unwrap_phase().data(), static_cast<int>(this->_internal_url_unwrap_phase().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sla.tpu_calc_res.url_unwrap_phase");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url_unwrap_phase(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sla.tpu_calc_res)
  return target;
}

size_t tpu_calc_res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sla.tpu_calc_res)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url_unwrap_phase = 1;
  if (this->url_unwrap_phase().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url_unwrap_phase());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void tpu_calc_res::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sla.tpu_calc_res)
  GOOGLE_DCHECK_NE(&from, this);
  const tpu_calc_res* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<tpu_calc_res>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sla.tpu_calc_res)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sla.tpu_calc_res)
    MergeFrom(*source);
  }
}

void tpu_calc_res::MergeFrom(const tpu_calc_res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sla.tpu_calc_res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url_unwrap_phase().size() > 0) {

    url_unwrap_phase_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.url_unwrap_phase_);
  }
}

void tpu_calc_res::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sla.tpu_calc_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tpu_calc_res::CopyFrom(const tpu_calc_res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sla.tpu_calc_res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tpu_calc_res::IsInitialized() const {
  return true;
}

void tpu_calc_res::InternalSwap(tpu_calc_res* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  url_unwrap_phase_.Swap(&other->url_unwrap_phase_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata tpu_calc_res::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sla
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sla::tpu_conf_req* Arena::CreateMaybeMessage< ::sla::tpu_conf_req >(Arena* arena) {
  return Arena::CreateInternal< ::sla::tpu_conf_req >(arena);
}
template<> PROTOBUF_NOINLINE ::sla::tpu_conf_res* Arena::CreateMaybeMessage< ::sla::tpu_conf_res >(Arena* arena) {
  return Arena::CreateInternal< ::sla::tpu_conf_res >(arena);
}
template<> PROTOBUF_NOINLINE ::sla::tpu_calc_req* Arena::CreateMaybeMessage< ::sla::tpu_calc_req >(Arena* arena) {
  return Arena::CreateInternal< ::sla::tpu_calc_req >(arena);
}
template<> PROTOBUF_NOINLINE ::sla::tpu_calc_res* Arena::CreateMaybeMessage< ::sla::tpu_calc_res >(Arena* arena) {
  return Arena::CreateInternal< ::sla::tpu_calc_res >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
